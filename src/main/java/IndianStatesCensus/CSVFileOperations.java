/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package IndianStatesCensus;

import java.io.*;
import java.nio.file.*;
import java.util.*;
import java.util.stream.StreamSupport;
import com.opencsv.*;
import com.opencsv.bean.*;

public class CSVFileOperations {
	public static boolean checkHeaderArrayFilePathAndDelimiter(String[] mapping, String path, char delimiter) throws CustomException {
		try {
			Reader reader = Files.newBufferedReader(Paths.get(path));
			CSVParser parser = new CSVParserBuilder().withIgnoreQuotations(true).withSeparator(',').build();
			CSVReader csvReader = new CSVReaderBuilder(reader).withCSVParser(parser).build();
			String[] header = csvReader.readNext();
			if (header == mapping && delimiter==',')
				return true;
			else if(header!=mapping && delimiter==',')
				throw new CustomException(CustomException.ExceptionType.INCORRECT_HEADER, "Header array is incorrect!");
			else if(header!=mapping && delimiter!=',') 	
				throw new CustomException(CustomException.ExceptionType.INCORRECT_DELIMITER,"Delimiter entered is not correct!");
		} catch (IOException e) {
			throw new CustomException(CustomException.ExceptionType.FILE_NOT_FOUND, "File Not Found!");
		}
		return false;
	}

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public static <T> Iterator<T> getCSVIterator(Reader reader, Class csvClass) throws CustomException {
		try {
			CsvToBeanBuilder<T> csvToBeanBuilder = new CsvToBeanBuilder<>(reader);
			CsvToBean<T> csvToBean = csvToBeanBuilder.withType(csvClass).withIgnoreLeadingWhiteSpace(true).build();
			return csvToBean.iterator();
		} catch (IllegalStateException e) {
			throw new CustomException(CustomException.ExceptionType.PARSING_ERROR, "Unable to parse!");
		}
	}
	
	public static <E> int getCount(Iterator<E> iterator) {
		Iterable<E> csvIterable = () -> iterator;
		return (int) (StreamSupport.stream(csvIterable.spliterator(), false)).count();
	}
}